Imports System.Collections.Generic
Imports System.Text
Imports System.IO
Imports PdfSharp
Imports PdfSharp.Drawing
Imports PdfSharp.Pdf

Module Module1

    Sub Main()

        ' This data will evnetually come from the .CSV splitter .

        Dim columns As List(Of String)()
        Dim timestamp As List(Of String) = New List(Of String)
        Dim alarm As List(Of String) = New List(Of String)

        Dim userid As List(Of String) = New List(Of String)

        Dim userid1 As List(Of String) = New List(Of String)

        Dim flow As List(Of String) = New List(Of String)

        Dim ch1 As List(Of String) = New List(Of String)
        Dim ch2 As List(Of String) = New List(Of String)
        Dim ch3 As List(Of String) = New List(Of String)
        Dim ch4 As List(Of String) = New List(Of String)
        Dim ch5 As List(Of String) = New List(Of String)
        Dim ch6 As List(Of String) = New List(Of String)


        ch1.Add(".3")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475") '
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475") '
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475") '
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475") '
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475") '
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475")
        ch1.Add("878475") '
        ch1.Add("878475")


        ch2.Add(".5")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")
        ch2.Add("878475")










        timestamp.Add("Timestamp")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")
        timestamp.Add("2033-03-14 8:59:40")




        alarm.Add("Alarm")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")
        alarm.Add("0")


        userid.Add("UserID")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")
        userid.Add("FahimFaisal")


        columns = {timestamp, alarm, userid, ch1, ch2}


        ' Goal is to read 3 items from each timestamp, alarm, userid and put them in the PDF file

        ' Create a new PDF document
        Dim document As PdfDocument = New PdfDocument
        document.Info.Title = "Created with PDFsharp"

        ' Create an empty page
        Dim page As PdfPage = document.AddPage
        page.Orientation = PageOrientation.Landscape
        ' Get an XGraphics object for drawing
        Dim gfx As XGraphics = XGraphics.FromPdfPage(page)
        Dim font As XFont = New XFont("Arial", 8, XFontStyle.Regular)

        ' Genereting a Header with a different font
        Dim font1 As XFont = New XFont("Arial", 8, XFontStyle.Regular)

        gfx.DrawString("Climet Instrument", font1, XBrushes.Blue,
            New XPoint(25, 50), XStringFormat.TopLeft)

        gfx.DrawString("X70 Particle counter", font1, XBrushes.Blue,
            New XPoint(25, 60), XStringFormat.TopLeft)

        gfx.DrawString("09-23-56 8:50", font1, XBrushes.Blue,
            New XPoint(25, 70), XStringFormat.TopLeft)



        'paremeters for the page
        Dim Xaxis As Integer = 25
        Dim Yaxis As Integer = 100
        Dim LeftLength As Double

        'Sample Data
        Dim total_samples As Integer = columns(1).Count()
        Dim count As Integer = 0
        Dim current_row As Integer
        Dim current_row1 As Integer = 0
        'number of itms I wnat to read from current row
        Dim target_row As Integer = 20
        Dim column1 As Integer
        Dim row As Integer
        Dim newpage As Boolean = False

        While count < columns(0).Count()
            ' this loop keeps iterating over the 3 items of the columns 
            For column1 = 0 To columns.Count() - 1
                ' This loop will print out 3 items from timestamp, alamp, and userID
                ' And after printing out 3 items from each of timestamp, alarmp, userId calulate the Xlength 
                ' of one of their string and use it to calculate the proper line space for the next column.
                If column1 = 0 Then
                    'Adding a Header on the new page
                    If newpage = True Then
                        gfx.DrawString(columns(column1)(0), font, XBrushes.Black,
                        New XPoint(Xaxis, Yaxis), XStringFormat.TopLeft)
                        Yaxis = Yaxis + 10

                    End If
                    For current_row = current_row1 To target_row - 1
                        gfx.DrawString(columns(column1)(current_row), font, XBrushes.Black,
                        New XPoint(Xaxis, Yaxis), XStringFormat.TopLeft)
                        Yaxis = Yaxis + 10
                    Next
                    'Here we will calculate the sting Xlength of one item of the column 0
                    Dim str1 As String = columns(column1)(1).ToString
                    'This gives the Dimension of the string st1
                    Dim xlength As XSize = gfx.MeasureString(str1, font)
                    ' This gives the width(Xlength) of the string.
                    LeftLength = xlength.Width
                    'Assigning the approprite Xaxis length from the left for the next column.
                    Xaxis = LeftLength + Xaxis + 25
                Else
                    If count = 0 Then
                        Yaxis = 100
                    Else
                        Yaxis = 15
                    End If
                    'Adding header on the new page
                    If newpage = True Then
                        gfx.DrawString(columns(column1)(0), font, XBrushes.Black,
                        New XPoint(Xaxis, Yaxis), XStringFormat.TopLeft)
                        Yaxis = Yaxis + 10

                    End If
                    For current_row = current_row1 To target_row - 1
                        gfx.DrawString(columns(column1)(current_row), font, XBrushes.Black,
                        New XPoint(Xaxis, Yaxis), XStringFormat.TopLeft)
                        Yaxis = Yaxis + 10
                    Next

                    'Here we will calculate the 2nd sting Xlength of one item of the column 1...m
                    Dim str1 As String = columns(column1)(1).ToString
                    'This gives the Dimension of the string st1
                    Dim xlength As XSize = gfx.MeasureString(str1, font)
                    ' This gives the width(Xlength) of the string + left left margin
                    LeftLength = xlength.Width + Xaxis
                    'Assigning the approprite Xaxis length from the left for the next column.
                    Xaxis = LeftLength + 25

                End If
            Next
            newpage = False
            count = target_row

            ' Creating a new page when a certain number of samples have been created 
            If count = target_row Then
                ' Adding a new page to the document
                page = document.AddPage
                page.Orientation = PageOrientation.Landscape
                newpage = True
                gfx = XGraphics.FromPdfPage(page)
                'Print all the Header here as new page is created and modify the Mrgin

                'Setting page paremeters for the newly created page
                Yaxis = 15
                Xaxis = 25

            End If

            ' setting up the next right rows and column
            current_row1 = target_row

            If total_samples - target_row > 20 Then
                target_row = target_row + 20
            Else
                Dim reminder_row As Integer = total_samples - target_row
                target_row = reminder_row + target_row
            End If


        End While

        ' Save the document...
        Dim filename As String = "C:\Users\faisa\Downloads\PDF_Sample2.pdf"
        document.Save(filename)

        ' ...and start a viewer.
        Process.Start(filename)



    End Sub

End Module
